<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//event_user(0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//if (ds_exists(ds_type_priority, TURN_PRIORITY_LIST_COPY))
// ds_priority_destroy(TURN_PRIORITY_LIST_COPY);

//if (ds_exists(ds_type_priority, TURN_PRIORITY_LIST))
// ds_priority_destroy(TURN_PRIORITY_LIST);

game_begin();

player_saved_branch_create(PLAYER_SAVEDLOADED_INDEX, true, true, true, true, true);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (instance_exists(oPlayer)) {
 
}

draw_set_color($ffffff);

draw_set_font(fontTurn);
draw_set_halign(0);
draw_set_valign(1);

var gsx = VIEW_DX + VIEW_DW + 10;
var gsy = VIEW_DY + 300;

draw_text(gsx, gsy, "TURN: #" + string(TURN));
//gsy += 50;
//draw_text(gsx, gsy, "TURN (REAL): #" + string(TURN_REAL));


draw_set_font(fontGlobal);

var sx = VIEW_MX;
var sy = VIEW_DY + VIEW_DH + 20;
//draw_sprite_ext(sInventoryBack, 0, sx - 150, sy - 10, 1, 1, 0, $ffffff, 1);
var rown = 6, swidth = 32;
var idx = sx - rown * swidth / 2;
for (var i = 0; i &lt; INVENTORY_MAX; i++) {
 var dx = idx + (i - floor(i / rown) * rown) * swidth;
 var dy = sy + floor(i / rown) * swidth;
 draw_sprite_ext(sInventoryTile, 0, dx, dy, 1, 1, 0, $ffffff, 1);
}


/*
draw_set_alpha(1);
draw_set_color(0);
draw_rectangle(VIEW_DX + 40, VIEW_DY + 40, VIEW_DX + VIEW_DW - 40, VIEW_DY + VIEW_DH - 40, 0);

draw_set_halign(1);
draw_set_valign(1);

draw_set_color($ffffff);
with (ENTITY_LIST[0]) {
 var name = entity_variable_get(VAR_NAME);
 var hd = entity_variable_get(VAR_HD);
 var xp = entity_variable_get(VAR_XP);

 var dx = VIEW_MX;
 var dy = VIEW_MY;
 draw_text(dx - 100, dy, name);
 draw_text(dx, dy, string(hd));
 draw_text(dx + 100, dy, string(xp));
 draw_text(dx + 100, dy + 100, "1000");
}
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (instance_exists(TURN_CURRENT)) {
 draw_sprite_ext(sArrowDown, 0, TURN_CURRENT.x + 16, TURN_CURRENT.y + 4, 1, 1, 0, $ffffff, 1);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
